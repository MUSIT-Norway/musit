# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET           /service/storagefacility/buildinfo                                controllers.Application.buildInfo

# StorageNode endpoints
POST          /v1/museum/:mid/storagenodes                                      controllers.StorageNodeResource.add(mid: Int)
POST          /v1/museum/:mid/storagenodes/root                                 controllers.StorageNodeResource.addRoot(mid: Int)
GET           /v1/museum/:mid/storagenodes/root                                 controllers.StorageNodeResource.root(mid: Int)
GET           /v1/museum/:mid/storagenodes/report                               controllers.KdReportResource.getReportByMuseum(mid: Int)
PUT           /v1/museum/:mid/storagenodes/moveNode                             controllers.StorageNodeResource.moveNode(mid: Int)
PUT           /v1/museum/:mid/storagenodes/moveObject                           controllers.StorageNodeResource.moveObject(mid: Int)
GET           /v1/museum/:mid/storagenodes/search                               controllers.StorageNodeResource.search(mid: Int, searchStr: Option[String], page: Int ?= 1, limit: Int ?=25)
GET           /v1/museum/:mid/storagenodes/:nodeId                              controllers.StorageNodeResource.getById(mid: Int, nodeId: Long)
PUT           /v1/museum/:mid/storagenodes/:nodeId                              controllers.StorageNodeResource.update(mid: Int, nodeId: Long)
DELETE        /v1/museum/:mid/storagenodes/:nodeId                              controllers.StorageNodeResource.delete(mid: Int, nodeId: Long)
GET           /v1/museum/:mid/storagenodes/:nodeId/children                     controllers.StorageNodeResource.children(mid: Int, nodeId: Long)
GET           /v1/museum/:mid/storagenodes/:nodeId/stats                        controllers.StorageNodeResource.stats(mid: Int, nodeId: Long)
GET           /v1/museum/:mid/storagenodes/objects/:oid/locations               controllers.StorageNodeResource.objectLocationHistory(mid: Int, oid: Long, limit: Int ?= 50)
GET           /v1/museum/:mid/storagenodes/objects/:oid/currentlocation         controllers.StorageNodeResource.currentObjectLocation(mid: Int, oid: Long)
# Controls
POST          /v1/museum/:mid/storagenodes/:nodeId/controls                     controllers.EventResource.addControl(mid: Int, nodeId: Long)
GET           /v1/museum/:mid/storagenodes/:nodeId/controls                     controllers.EventResource.listControls(mid: Int, nodeId: Long)
GET           /v1/museum/:mid/storagenodes/:nodeId/controls/:eventId            controllers.EventResource.getControl(mid: Int, nodeId: Long, eventId: Long)

# Observations
POST          /v1/museum/:mid/storagenodes/:nodeId/observations                 controllers.EventResource.addObservation(mid: Int, nodeId: Long)
GET           /v1/museum/:mid/storagenodes/:nodeId/observations                 controllers.EventResource.listObservations(mid: Int, nodeId: Long)
GET           /v1/museum/:mid/storagenodes/:nodeId/observations/:eventId        controllers.EventResource.getObservation(mid: Int, nodeId: Long, eventId: Long)

# General endpoints
### TODO: Find better name for endpoint
GET           /v1/museum/:mid/storagenodes/:nodeId/events                       controllers.EventResource.listEventsForNode(mid: Int, nodeId: Long)

