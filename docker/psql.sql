CREATE SCHEMA "MUSARK_EVENT";
CREATE SCHEMA "MUSARK_STORAGE";
CREATE SCHEMA "MUSIT_MAPPING";

SET search_path = "MUSARK_EVENT", pg_catalog;

CREATE TABLE "ACTOR_ROLE" (
    "ID" integer NOT NULL,
    "NAME" character varying(200) NOT NULL,
    "DESCRIPTION" character varying(200)
);

CREATE SEQUENCE "EVENT_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE "EVENT" (
    "ID" bigint DEFAULT nextval('"EVENT_seq"'::regclass) NOT NULL,
    "EVENT_TYPE_ID" integer NOT NULL,
    "NOTE" character varying(4000),
    "EVENT_DATE" timestamp(0) without time zone,
    "REGISTERED_BY" character varying(100),
    "REGISTERED_DATE" timestamp without time zone,
    "VALUE_LONG" text,
    "VALUE_STRING" text,
    "VALUE_FLOAT" double precision,
    "PART_OF" bigint
);

CREATE TABLE "EVENT_RELATION_EVENT" (
    "FROM_EVENT_ID" bigint NOT NULL,
    "RELATION_ID" integer NOT NULL,
    "TO_EVENT_ID" bigint NOT NULL
);

CREATE TABLE "EVENT_ROLE_ACTOR" (
    "EVENT_ID" bigint NOT NULL,
    "ROLE_ID" integer NOT NULL,
    "ACTOR_ID" integer NOT NULL
);

CREATE TABLE "EVENT_ROLE_OBJECT" (
    "EVENT_ID" bigint NOT NULL,
    "ROLE_ID" integer NOT NULL,
    "OBJECT_ID" bigint NOT NULL
);

CREATE TABLE "EVENT_ROLE_PLACE" (
    "EVENT_ID" bigint NOT NULL,
    "ROLE_ID" integer NOT NULL,
    "PLACE_ID" integer NOT NULL
);

CREATE TABLE "EVENT_ROLE_PLACE_AS_OBJECT" (
    "EVENT_ID" bigint NOT NULL,
    "ROLE_ID" integer NOT NULL,
    "PLACE_ID" integer NOT NULL
);

CREATE TABLE "EVENT_TYPE" (
    "ID" integer NOT NULL,
    "NAME" character varying(100) NOT NULL,
    "DESCRIPTION" character varying(255)
);

CREATE TABLE "E_ENVIRONMENT_REQUIREMENT" (
    "ID" bigint NOT NULL,
    "TEMPERATURE" double precision,
    "TEMP_INTERVAL" double precision,
    "AIR_HUMIDITY" double precision,
    "AIR_HUM_INTERVAL" double precision,
    "HYPOXIC_AIR" double precision,
    "HYP_AIR_INTERVAL" double precision,
    "CLEANING" character varying(250),
    "LIGHT" character varying(250)
);

CREATE TABLE "LOCAL_OBJECT" (
    "OBJECT_ID" bigint NOT NULL,
    "LATEST_MOVE_ID" bigint,
    "CURRENT_LOCATION_ID" integer
);

CREATE TABLE "OBJECT_ROLE" (
    "ID" integer NOT NULL,
    "NAME" character varying(200) NOT NULL,
    "DESCRIPTION" character varying(200)
);

CREATE TABLE "OBSERVATION_FROM_TO" (
    "ID" bigint NOT NULL,
    "VALUE_FROM" double precision,
    "VALUE_TO" double precision
);

CREATE TABLE "OBSERVATION_PEST_LIFECYCLE" (
    "EVENT_ID" bigint NOT NULL,
    "STAGE" character varying(250),
    "NUMBER" integer
);

CREATE TABLE "PLACE_ROLE" (
    "ID" integer NOT NULL,
    "NAME" character varying(200) NOT NULL,
    "DESCRIPTION" character varying(200)
);

SET search_path = "MUSARK_STORAGE", pg_catalog;

CREATE SEQUENCE "STORAGE_UNIT_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE "STORAGE_NODE" (
    "STORAGE_NODE_ID" bigint DEFAULT nextval('"STORAGE_UNIT_seq"'::regclass) NOT NULL,
    "STORAGE_NODE_NAME" character varying(512),
    "AREA" integer,
    "AREA_TO" integer,
    "IS_STORAGE_UNIT" character varying(1) DEFAULT '1'::character varying,
    "IS_PART_OF" integer,
    "HEIGHT" integer,
    "HEIGHT_TO" integer,
    "IS_DELETED" boolean DEFAULT false,
    "STORAGE_TYPE" character varying(100) DEFAULT 'StorageUnit'::character varying,
    "GROUP_READ" character varying(4000),
    "GROUP_WRITE" character varying(4000),
    "LATEST_ENVREQ_ID" bigint,
    "LATEST_MOVE_ID" bigint
);

CREATE TABLE "BUILDING" (
    "STORAGE_NODE_ID" integer NOT NULL,
    "POSTAL_ADDRESS" character varying(512)
);

CREATE TABLE "ROOM"(
 "STORAGE_NODE_ID"             BIGINT NOT NULL,
 "PERIMETER_SECURITY"        boolean,-- NOT NULL DEFAULT 0,
 "THEFT_PROTECTION"       boolean,-- NOT NULL DEFAULT 1,
 "FIRE_PROTECTION"        boolean,-- NOT NULL DEFAULT 0,
 "WATER_DAMAGE_ASSESSMENT"     boolean,-- NOT NULL DEFAULT 0,
 "ROUTINES_AND_CONTINGENCY_PLAN" boolean,-- NOT NULL DEFAULT 0,
 "RELATIVE_HUMIDITY"           boolean,-- NOT NULL DEFAULT 0,
 "TEMPERATURE_ASSESSMENT"      boolean,-- NOT NULL DEFAULT 0,
 "LIGHTING_CONDITION"            boolean,-- NOT NULL DEFAULT 0,
 "PREVENTIVE_CONSERVATION"          boolean,-- NOT NULL DEFAULT 0,
 PRIMARY KEY ("STORAGE_NODE_ID"),
 FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "STORAGE_NODE"("STORAGE_NODE_ID")
 );

CREATE TABLE "STORAGE_UNIT_LINK" (
    "LINK_ID" bigint NOT NULL,
    "STORAGE_NODE_ID" bigint NOT NULL,
    "LINK" character varying(255) NOT NULL,
    "RELATION" character varying(100) NOT NULL
);

CREATE TABLE "ORGANISATION"(
 "STORAGE_NODE_ID" INTEGER not null ,
 "POSTAL_ADDRESS"  VARCHAR(512),
PRIMARY KEY ("STORAGE_NODE_ID"),
FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "STORAGE_NODE"("STORAGE_NODE_ID")
);

CREATE TABLE "E_ENVIRONMENT_REQUIREMENT"
(
 "ID"             BIGINT DEFAULT nextval('"STORAGE_UNIT_seq"'::regclass) NOT NULL,
 "TEMPERATURE"      INTEGER,
 "TEMPERATURE_TOLERANCE"    INTEGER,
 "RELATIVE_HUMIDITY"     INTEGER,
 "REL_HUM_TOLERANCE" INTEGER,
 "HYPOXIC_AIR"      INTEGER,
 "HYP_AIR_TOLERANCE" INTEGER,
 "CLEANING"         VARCHAR(250),
 "LIGHTING_COND"            VARCHAR(250),
 "NOTE" VARCHAR(4000),
  PRIMARY KEY ("ID")
);

SET search_path = "MUSIT_MAPPING", pg_catalog;

CREATE SEQUENCE "VIEW_ACTOR_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE "VIEW_ACTOR" (
    "NY_ID" bigint DEFAULT nextval('"VIEW_ACTOR_seq"'::regclass) NOT NULL,
    "ACTORNAME" character varying(512),
    "DATAPORTEN_ID" character varying(50)
);

CREATE SEQUENCE "VIEW_MUSITTHING_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

CREATE TABLE "VIEW_MUSITTHING" (
    "ID" bigint DEFAULT nextval('"VIEW_MUSITTHING_seq"'::regclass) NOT NULL,
    "DISPLAYID" varchar(255),
    "DISPLAYNAME" varchar(255),
    PRIMARY KEY ("ID")
);

SET search_path = "MUSARK_EVENT", pg_catalog;

ALTER TABLE ONLY "ACTOR_ROLE"
    ADD CONSTRAINT "ACTOR_ROLE_pkey" PRIMARY KEY ("ID");

insert into "ACTOR_ROLE"("ID", "NAME", "DESCRIPTION") VALUES (1, 'DoneBy', 'The actor who has executed/done the event');

ALTER TABLE ONLY "EVENT_ROLE_ACTOR"
    ADD CONSTRAINT "EVENT_ROLE_ACTOR_pkey" PRIMARY KEY ("EVENT_ID", "ROLE_ID", "ACTOR_ID");

ALTER TABLE ONLY "EVENT_ROLE_OBJECT"
    ADD CONSTRAINT "EVENT_ROLE_OBJECT_pkey" PRIMARY KEY ("EVENT_ID", "ROLE_ID", "OBJECT_ID");

ALTER TABLE ONLY "EVENT_ROLE_PLACE_AS_OBJECT"
    ADD CONSTRAINT "EVENT_ROLE_PLACE_AS_OBJECT_pkey" PRIMARY KEY ("EVENT_ID", "ROLE_ID", "PLACE_ID");

ALTER TABLE ONLY "EVENT_ROLE_PLACE"
    ADD CONSTRAINT "EVENT_ROLE_PLACE_pkey" PRIMARY KEY ("EVENT_ID", "ROLE_ID", "PLACE_ID");

ALTER TABLE ONLY "EVENT_TYPE"
    ADD CONSTRAINT "EVENT_TYPE_pkey" PRIMARY KEY ("ID");

ALTER TABLE ONLY "EVENT"
    ADD CONSTRAINT "EVENT_pkey" PRIMARY KEY ("ID");

ALTER TABLE ONLY "E_ENVIRONMENT_REQUIREMENT"
    ADD CONSTRAINT "E_ENVIRONMENT_REQUIREMENT_pkey" PRIMARY KEY ("ID");

ALTER TABLE ONLY "LOCAL_OBJECT"
    ADD CONSTRAINT "LOCAL_OBJECT_pkey" PRIMARY KEY ("OBJECT_ID");

ALTER TABLE ONLY "OBJECT_ROLE"
    ADD CONSTRAINT "OBJECT_ROLE_pkey" PRIMARY KEY ("ID");

ALTER TABLE ONLY "OBSERVATION_FROM_TO"
    ADD CONSTRAINT "OBSERVATION_FROM_TO_pkey" PRIMARY KEY ("ID");

ALTER TABLE ONLY "PLACE_ROLE"
    ADD CONSTRAINT "PLACE_ROLE_pkey" PRIMARY KEY ("ID");

SET search_path = "MUSARK_STORAGE", pg_catalog;

ALTER TABLE ONLY "BUILDING"
    ADD CONSTRAINT "BUILDING_pkey" PRIMARY KEY ("STORAGE_NODE_ID");

ALTER TABLE ONLY "ROOM"
    ADD CONSTRAINT "ROOM_pkey" PRIMARY KEY ("STORAGE_NODE_ID");

ALTER TABLE ONLY "STORAGE_UNIT_LINK"
    ADD CONSTRAINT "STORAGE_UNIT_LINK_pkey" PRIMARY KEY ("LINK_ID");

ALTER TABLE ONLY "STORAGE_NODE"
    ADD CONSTRAINT "STORAGE_UNIT_pkey" PRIMARY KEY ("STORAGE_NODE_ID");

SET search_path = "MUSIT_MAPPING", pg_catalog;

ALTER TABLE ONLY "VIEW_ACTOR"
    ADD CONSTRAINT "VIEW_ACTOR_pkey" PRIMARY KEY ("NY_ID");

INSERT INTO "VIEW_ACTOR" ("ACTORNAME") VALUES ('And, Arne1');
INSERT INTO "VIEW_ACTOR" ("ACTORNAME") VALUES ('Kanin, Kalle1');

SET search_path = "MUSARK_EVENT", pg_catalog;

ALTER TABLE ONLY "EVENT"
    ADD CONSTRAINT "EVENT_EVENT_TYPE_ID_fkey" FOREIGN KEY ("EVENT_TYPE_ID") REFERENCES "EVENT_TYPE"("ID");

ALTER TABLE ONLY "EVENT"
    ADD CONSTRAINT "EVENT_PART_OF_fkey" FOREIGN KEY ("PART_OF") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "EVENT_RELATION_EVENT"
    ADD CONSTRAINT "EVENT_RELATION_EVENT_FROM_EVENT_ID_fkey" FOREIGN KEY ("FROM_EVENT_ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "EVENT_RELATION_EVENT"
    ADD CONSTRAINT "EVENT_RELATION_EVENT_TO_EVENT_ID_fkey" FOREIGN KEY ("TO_EVENT_ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "EVENT_ROLE_ACTOR"
    ADD CONSTRAINT "EVENT_ROLE_ACTOR_EVENT_ID_fkey" FOREIGN KEY ("EVENT_ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "EVENT_ROLE_ACTOR"
    ADD CONSTRAINT "EVENT_ROLE_ACTOR_ROLE_ID_fkey" FOREIGN KEY ("ROLE_ID") REFERENCES "ACTOR_ROLE"("ID");

ALTER TABLE ONLY "EVENT_ROLE_OBJECT"
    ADD CONSTRAINT "EVENT_ROLE_OBJECT_EVENT_ID_fkey" FOREIGN KEY ("EVENT_ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "EVENT_ROLE_OBJECT"
    ADD CONSTRAINT "EVENT_ROLE_OBJECT_OBJECT_ID_fkey" FOREIGN KEY ("OBJECT_ID") REFERENCES "LOCAL_OBJECT"("OBJECT_ID");

ALTER TABLE ONLY "EVENT_ROLE_OBJECT"
    ADD CONSTRAINT "EVENT_ROLE_OBJECT_ROLE_ID_fkey" FOREIGN KEY ("ROLE_ID") REFERENCES "OBJECT_ROLE"("ID");

ALTER TABLE ONLY "EVENT_ROLE_PLACE_AS_OBJECT"
    ADD CONSTRAINT "EVENT_ROLE_PLACE_AS_OBJECT_EVENT_ID_fkey" FOREIGN KEY ("EVENT_ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "EVENT_ROLE_PLACE_AS_OBJECT"
    ADD CONSTRAINT "EVENT_ROLE_PLACE_AS_OBJECT_ROLE_ID_fkey" FOREIGN KEY ("ROLE_ID") REFERENCES "OBJECT_ROLE"("ID");

ALTER TABLE ONLY "EVENT_ROLE_PLACE"
    ADD CONSTRAINT "EVENT_ROLE_PLACE_EVENT_ID_fkey" FOREIGN KEY ("EVENT_ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "EVENT_ROLE_PLACE"
    ADD CONSTRAINT "EVENT_ROLE_PLACE_ROLE_ID_fkey" FOREIGN KEY ("ROLE_ID") REFERENCES "PLACE_ROLE"("ID");

ALTER TABLE ONLY "E_ENVIRONMENT_REQUIREMENT"
    ADD CONSTRAINT "E_ENVIRONMENT_REQUIREMENT_ID_fkey" FOREIGN KEY ("ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "LOCAL_OBJECT"
    ADD CONSTRAINT "LOCAL_OBJECT_LATEST_MOVE_ID_fkey" FOREIGN KEY ("LATEST_MOVE_ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "OBSERVATION_FROM_TO"
    ADD CONSTRAINT "OBSERVATION_FROM_TO_ID_fkey" FOREIGN KEY ("ID") REFERENCES "EVENT"("ID");

ALTER TABLE ONLY "OBSERVATION_PEST_LIFECYCLE"
    ADD CONSTRAINT "OBSERVATION_PEST_LIFECYCLE_EVENT_ID_fkey" FOREIGN KEY ("EVENT_ID") REFERENCES "EVENT"("ID");

insert into "EVENT_TYPE" ("ID","NAME") values (1, 'Move');
insert into "EVENT_TYPE" ("ID","NAME") values (2, 'EnvRequirement');
insert into "EVENT_TYPE" ("ID","NAME") values (3, 'Control');
insert into "EVENT_TYPE" ("ID","NAME") values (4, 'Observation');

insert into "EVENT_TYPE" ("ID","NAME") values (5, 'ControlAlcohol');
insert into "EVENT_TYPE" ("ID","NAME") values (6, 'ControlCleaning');
insert into "EVENT_TYPE" ("ID","NAME") values (7, 'ControlGas');
insert into "EVENT_TYPE" ("ID","NAME") values (8, 'ControlHypoxicAir');
insert into "EVENT_TYPE" ("ID","NAME") values (9, 'ControlLightingCondition');
insert into "EVENT_TYPE" ("ID","NAME") values (10, 'ControlMold');
insert into "EVENT_TYPE" ("ID","NAME") values (11, 'ControlPest');
insert into "EVENT_TYPE" ("ID","NAME") values (12, 'ControlRelativeHumidity');
insert into "EVENT_TYPE" ("ID","NAME") values (13, 'ControlTemperature');

insert into "EVENT_TYPE" ("ID","NAME") values (14, 'ObservationAlcohol');
insert into "EVENT_TYPE" ("ID","NAME") values (15, 'ObservationCleaning');
insert into "EVENT_TYPE" ("ID","NAME") values (16, 'ObservationFireProtection');
insert into "EVENT_TYPE" ("ID","NAME") values (17, 'ObservationGas');
insert into "EVENT_TYPE" ("ID","NAME") values (18, 'ObservationHypoxicAir');
insert into "EVENT_TYPE" ("ID","NAME") values (19, 'ObservationLightingCondition');
insert into "EVENT_TYPE" ("ID","NAME") values (20, 'ObservationMold');
insert into "EVENT_TYPE" ("ID","NAME") values (21, 'ObservationPerimeterSecurity');
insert into "EVENT_TYPE" ("ID","NAME") values (22, 'ObservationRelativeHumidity');
insert into "EVENT_TYPE" ("ID","NAME") values (23, 'ObservationPest');
insert into "EVENT_TYPE" ("ID","NAME") values (24, 'ObservationTemperature');
insert into "EVENT_TYPE" ("ID","NAME") values (25, 'ObservationTheftProtection');
insert into "EVENT_TYPE" ("ID","NAME") values (26, 'ObservationWaterDamageAssessment');

SET search_path = "MUSARK_STORAGE", pg_catalog;

ALTER TABLE ONLY "BUILDING"
    ADD CONSTRAINT "BUILDING_STORAGE_UNIT_ID_fkey" FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "STORAGE_NODE"("STORAGE_NODE_ID");

ALTER TABLE ONLY "ROOM"
    ADD CONSTRAINT "ROOM_STORAGE_UNIT_ID_fkey" FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "STORAGE_NODE"("STORAGE_NODE_ID");

ALTER TABLE ONLY "STORAGE_UNIT_LINK"
    ADD CONSTRAINT "STORAGE_UNIT_LINK_STORAGE_UNIT_ID_fkey" FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "STORAGE_NODE"("STORAGE_NODE_ID");
