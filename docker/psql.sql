CREATE SCHEMA IF NOT EXISTS "MUSARK_STORAGE";

-- ===========================================================================
-- TABLES FOR STORAGE NODES
-- ===========================================================================

CREATE SEQUENCE "MUSARK_STORAGE"."STORAGE_NODE_SEQ";

CREATE TABLE "MUSARK_STORAGE"."STORAGE_NODE" (
  "STORAGE_NODE_ID" BIGINT NOT NULL DEFAULT NEXTVAL ('"MUSARK_STORAGE"."STORAGE_NODE_SEQ"'),
  "STORAGE_NODE_NAME" VARCHAR(512),
  "AREA" DOUBLE PRECISION,
  "AREA_TO" DOUBLE PRECISION,
  "IS_STORAGE_UNIT" VARCHAR(1) DEFAULT '1',
  "IS_PART_OF" BIGINT,
  "HEIGHT" DOUBLE PRECISION,
  "HEIGHT_TO" DOUBLE PRECISION,
  "IS_DELETED" BOOLEAN NOT NULL,
  "STORAGE_TYPE" VARCHAR(100) DEFAULT 'StorageUnit',
  "GROUP_READ" VARCHAR(4000),
  "GROUP_WRITE" VARCHAR(4000),
  "LATEST_MOVE_ID" BIGINT,
  "LATEST_ENVREQ_ID" BIGINT,
  "NODE_PATH" VARCHAR(4000),
  PRIMARY KEY ("STORAGE_NODE_ID")
);

CREATE TABLE "MUSARK_STORAGE"."ROOM" (
  "STORAGE_NODE_ID" BIGINT NOT NULL,
  "PERIMETER_SECURITY" INTEGER, -- DEFAULT 0 NOT NULL,
  "THEFT_PROTECTION" INTEGER, -- DEFAULT 1 NOT NULL,
  "FIRE_PROTECTION" INTEGER, -- DEFAULT 0 NOT NULL,
  "WATER_DAMAGE_ASSESSMENT" INTEGER, -- DEFAULT 0 NOT NULL,
  "ROUTINES_AND_CONTINGENCY_PLAN" INTEGER, -- DEFAULT 0 NOT NULL,
  "RELATIVE_HUMIDITY" INTEGER, -- DEFAULT 0 NOT NULL,
  "TEMPERATURE_ASSESSMENT" INTEGER, -- DEFAULT 0 NOT NULL,
  "LIGHTING_CONDITION" INTEGER, -- DEFAULT 0 NOT NULL,
  "PREVENTIVE_CONSERVATION" INTEGER, -- DEFAULT 0 NOT NULL,
  PRIMARY KEY ("STORAGE_NODE_ID"),
  FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "MUSARK_STORAGE"."STORAGE_NODE"("STORAGE_NODE_ID")
);

CREATE TABLE "MUSARK_STORAGE"."BUILDING" (
  "STORAGE_NODE_ID" BIGINT NOT NULL,
  "POSTAL_ADDRESS" VARCHAR(512),
  PRIMARY KEY ("STORAGE_NODE_ID"),
  FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "MUSARK_STORAGE"."STORAGE_NODE"("STORAGE_NODE_ID")
);

CREATE TABLE "MUSARK_STORAGE"."ORGANISATION"(
  "STORAGE_NODE_ID" BIGINT NOT NULL ,
  "POSTAL_ADDRESS"  VARCHAR(512),
  PRIMARY KEY ("STORAGE_NODE_ID"),
  FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "MUSARK_STORAGE"."STORAGE_NODE"("STORAGE_NODE_ID")
);

CREATE TABLE "MUSARK_STORAGE"."STORAGE_UNIT_LINK" (
  "LINK_ID" BIGINT NOT NULL,
  "STORAGE_NODE_ID" BIGINT NOT NULL,
  "LINK" VARCHAR(255) NOT NULL,
  "RELATION" VARCHAR(100) NOT NULL,
  PRIMARY KEY ("LINK_ID"),
  FOREIGN KEY ("STORAGE_NODE_ID") REFERENCES "MUSARK_STORAGE"."STORAGE_NODE"("STORAGE_NODE_ID")
);

-- ===========================================================================
-- EVENT SPECIFIC TABLES.
-- ===========================================================================

CREATE TABLE "MUSARK_STORAGE"."ROLE" (
  "ID" INTEGER NOT NULL,
  "NAME" VARCHAR(100) NOT NULL,
  "TYPE" VARCHAR(100),
  PRIMARY KEY ("ID")
);

CREATE TABLE "MUSARK_STORAGE"."EVENT_TYPE" (
  "ID" INTEGER NOT NULL ,
  "NAME" VARCHAR(100) NOT NULL,
  PRIMARY KEY ("ID")
);

-- THE MAIN TABLE FOR STORING EVENTS IN THE STORAGEFACILITY SERVICE.
CREATE SEQUENCE "MUSARK_STORAGE"."EVENT_SEQ";

CREATE TABLE "MUSARK_STORAGE"."EVENT" (
  "ID" BIGINT NOT NULL DEFAULT NEXTVAL ('"MUSARK_STORAGE"."EVENT_SEQ"') ,
  "EVENT_TYPE_ID" INTEGER NOT NULL, -- MOVE TO SEPARATE TABLE IF WE WANT TO ALLOW MULTIPLE INSTANTIATIONS
  "NOTE" VARCHAR(500),

  "EVENT_DATE" TIMESTAMP(0) NOT NULL, -- WHEN THE EVENT HAPPENED. SHOULD BE NULLABLE.

  "REGISTERED_BY" VARCHAR(100) NOT NULL,
  "REGISTERED_DATE" TIMESTAMP NOT NULL, -- WHEN THE EVENT WAS RECEIVED BY THE SYSTEM

  "VALUE_LONG" BIGINT, -- CUSTOM VALUE, EVENTS CAN CHOOSE TO STORE SOME EVENT-SPECIFIC VALUE HERE. NOTE: 20 IS PROBABLY WAAAAAAY TO MUCH.
  "VALUE_STRING" VARCHAR(250), -- CUSTOM VALUE, EVENTS CAN CHOOSE TO STORE SOME EVENT-SPECIFIC VALUE HERE.
  "VALUE_FLOAT" DOUBLE PRECISION, -- CUSTOM VALUE, EVENTS CAN CHOOSE TO STORE SOME EVENT-SPECIFIC VALUE HERE.

  "PART_OF" BIGINT, -- 1 TO 1 WITH A TOP-LEVEL EVENT
  PRIMARY KEY ("ID"),
  FOREIGN KEY ("EVENT_TYPE_ID") REFERENCES "MUSARK_STORAGE"."EVENT_TYPE"("ID"),
  FOREIGN KEY ("PART_OF") REFERENCES "MUSARK_STORAGE"."EVENT"("ID")
);

-- ???
CREATE TABLE "MUSARK_STORAGE"."EVENT_RELATION_EVENT" (
  "FROM_EVENT_ID" BIGINT NOT NULL,
  "RELATION_ID" INTEGER NOT NULL,
  "TO_EVENT_ID" BIGINT NOT NULL,
  FOREIGN KEY ("FROM_EVENT_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID"),
  FOREIGN KEY ("TO_EVENT_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID")
);

CREATE TABLE "MUSARK_STORAGE"."LOCAL_OBJECT" (
  "OBJECT_ID" BIGINT NOT NULL,
  "LATEST_MOVE_ID" BIGINT NOT NULL,
  "CURRENT_LOCATION_ID" BIGINT NOT NULL,
  PRIMARY KEY ("OBJECT_ID"),
  FOREIGN KEY ("LATEST_MOVE_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID"),
  FOREIGN KEY ("CURRENT_LOCATION_ID") REFERENCES "MUSARK_STORAGE"."STORAGE_NODE"("STORAGE_NODE_ID")
);

CREATE TABLE "MUSARK_STORAGE"."EVENT_ROLE_ACTOR" (
  "EVENT_ID" BIGINT NOT NULL,
  "ROLE_ID" INTEGER NOT NULL,
  "ACTOR_ID" INTEGER NOT NULL, -- REFERENCE BY ID TO THE ACTORSERVICE
  PRIMARY KEY ("EVENT_ID", "ROLE_ID", "ACTOR_ID"),
  FOREIGN KEY ("EVENT_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID"),
  FOREIGN KEY ("ROLE_ID") REFERENCES "MUSARK_STORAGE"."ROLE"("ID")
);

CREATE TABLE "MUSARK_STORAGE"."EVENT_ROLE_OBJECT" (
  "EVENT_ID" BIGINT NOT NULL,
  "ROLE_ID" INTEGER NOT NULL,
  "OBJECT_ID" BIGINT NOT NULL,
  PRIMARY KEY ("EVENT_ID", "ROLE_ID", "OBJECT_ID"),
  FOREIGN KEY ("EVENT_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID"),
  FOREIGN KEY ("ROLE_ID") REFERENCES "MUSARK_STORAGE"."ROLE"("ID"),
  FOREIGN KEY ("OBJECT_ID") REFERENCES "MUSARK_STORAGE"."LOCAL_OBJECT"("OBJECT_ID")
);

-- THIS IS THE GENERIC EVENT-TO-PLACE RELATION, THE PLACE OF WHERE AN EVENT
-- HAPPENED, THE PLACE OF WHERE SOMETHING WAS MOVED TO ETC.
CREATE TABLE "MUSARK_STORAGE"."EVENT_ROLE_PLACE" (
  "EVENT_ID" BIGINT NOT NULL,
  "ROLE_ID" INTEGER NOT NULL,
  "PLACE_ID"  BIGINT NOT NULL,
  PRIMARY KEY ("EVENT_ID", "ROLE_ID", "PLACE_ID"),
  FOREIGN KEY ("EVENT_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID"),
  FOREIGN KEY ("ROLE_ID") REFERENCES "MUSARK_STORAGE"."ROLE"("ID"),
  FOREIGN KEY ("PLACE_ID") REFERENCES "MUSARK_STORAGE"."STORAGE_NODE"("STORAGE_NODE_ID")
);

-- FOR SOME EVENT TYPES, THE "OBJECTS" REALLY ARE PLACES. READ IT AS
-- EVENT_ROLE_PLACEASOBJECT. THIS SITUATION IS STORED IN THIS TABLE. WE COULD
-- HAVE USED THE EVENT_ROLE_OBJECT, BUT THEN WE WOULD LOOSE FOREIGN KEYS AND
-- WOULD HAVE NEEDED TO TAG WHICH IS WHICH.
CREATE TABLE "MUSARK_STORAGE"."EVENT_ROLE_PLACE_AS_OBJECT" (
  "EVENT_ID" BIGINT NOT NULL,
  "ROLE_ID" INTEGER NOT NULL,
  "PLACE_ID"  BIGINT NOT NULL,
  PRIMARY KEY ("EVENT_ID", "ROLE_ID", "PLACE_ID"),
  FOREIGN KEY ("EVENT_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID"),
  FOREIGN KEY ("ROLE_ID") REFERENCES "MUSARK_STORAGE"."ROLE"("ID"),
  FOREIGN KEY ("PLACE_ID") REFERENCES "MUSARK_STORAGE"."STORAGE_NODE"("STORAGE_NODE_ID")
);

-- ===========================================================================
-- TABLES FOR EVENTS WITH ADDITIONAL ATTRIBUTES. THESE DO NOT FIT INTO THE
-- THREE COLUMNS SET ASIDE FOR THE CUSTOM ATTRIBUTES IN THE EVENT TABLE.
-- ===========================================================================

-- CONTAINS DATA FOR EVENTS THAT HAVE A FROM -> TO STRUCTURE.
CREATE TABLE "MUSARK_STORAGE"."OBSERVATION_FROM_TO" (
  "ID" BIGINT NOT NULL,
  "VALUE_FROM" DOUBLE PRECISION,
  "VALUE_TO" DOUBLE PRECISION,
  PRIMARY KEY ("ID"),
  FOREIGN KEY ("ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID")
);

-- CONTAINS EXTRA DATA FOR STORING ENVIRONMENT REQUIREMENT.
CREATE TABLE "MUSARK_STORAGE"."E_ENVIRONMENT_REQUIREMENT" (
  "ID" BIGINT NOT NULL,
  "TEMPERATURE" DOUBLE PRECISION,
  "TEMP_TOLERANCE" INTEGER,
  "REL_HUMIDITY" DOUBLE PRECISION,
  "REL_HUM_TOLERANCE" INTEGER,
  "HYPOXIC_AIR" DOUBLE PRECISION,
  "HYP_AIR_TOLERANCE" INTEGER,
  "CLEANING" VARCHAR(250),
  "LIGHT" VARCHAR(250),
  PRIMARY KEY ("ID"),
  FOREIGN KEY ("ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID")
);

-- CONTAINS EXTRA DATA FOR STORING INFO ABOUT A PEST LIFECYCLE. IT IS USED BY
-- THE OBSERVATIONPEST EVENT WHICH CAN HAVE MANY OF THESE.
CREATE TABLE "MUSARK_STORAGE"."OBSERVATION_PEST_LIFECYCLE" (
  "EVENT_ID" BIGINT NOT NULL,
  "STAGE" VARCHAR(250),
  "QUANTITY" INTEGER,
  FOREIGN KEY ("EVENT_ID") REFERENCES "MUSARK_STORAGE"."EVENT"("ID")
);

-- NOTE: THIS TABLE IS CURRENTLY NOT USED.
CREATE SEQUENCE "MUSARK_STORAGE"."URI_LINKS_SEQ";

CREATE TABLE "MUSARK_STORAGE"."URI_LINKS" (
  "ID" BIGINT NOT NULL DEFAULT NEXTVAL ('"MUSARK_STORAGE"."URI_LINKS_SEQ"') ,
  "LOCAL_TABLE_ID" BIGINT NOT NULL,
  "REL" VARCHAR(255) NOT NULL,
  "HREF" VARCHAR(2000) NOT NULL,
  PRIMARY KEY ("ID")
);

-- ===========================================================================
-- Pre-populating necessary data
-- ===========================================================================

INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (1, 'MoveObject');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (2, 'MovePlace');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (3, 'EnvRequirement');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (4, 'Control');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (5, 'Observation');

INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (6, 'ControlAlcohol');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (7, 'ControlCleaning');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (8, 'ControlGas');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (9, 'ControlHypoxicAir');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (10, 'ControlLightingCondition');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (11, 'ControlMold');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (12, 'ControlPest');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (13, 'ControlRelativeHumidity');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (14, 'ControlTemperature');

INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (15, 'ObservationAlcohol');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (16, 'ObservationCleaning');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (17, 'ObservationFireProtection');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (18, 'ObservationGas');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (19, 'ObservationHypoxicAir');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (20, 'ObservationLightingCondition');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (21, 'ObservationMold');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (22, 'ObservationPerimeterSecurity');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (23, 'ObservationRelativeHumidity');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (24, 'ObservationPest');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (25, 'ObservationTemperature');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (26, 'ObservationTheftProtection');
INSERT INTO "MUSARK_STORAGE"."EVENT_TYPE" ("ID","NAME") VALUES (27, 'ObservationWaterDamageAssessment');

INSERT INTO "MUSARK_STORAGE"."ROLE" ("ID","NAME","TYPE")
VALUES (1, 'DoneWith', 'object');

INSERT INTO "MUSARK_STORAGE"."ROLE" ("ID","NAME","TYPE")
VALUES (2, 'DoneBy', 'actor');

INSERT INTO "MUSARK_STORAGE"."ROLE" ("ID","NAME","TYPE")
VALUES (3, 'toPlace', 'storageNode');

INSERT INTO "MUSARK_STORAGE"."ROLE" ("ID","NAME","TYPE")
VALUES (4, 'fromPlace', 'storageNode');

CREATE SCHEMA IF NOT EXISTS "MUSIT_MAPPING";

CREATE SEQUENCE "MUSIT_MAPPING"."VIEW_ACTOR_seq";

CREATE TABLE "MUSIT_MAPPING"."VIEW_ACTOR" (
  "NY_ID" BIGINT NOT NULL DEFAULT NEXTVAL ('"MUSIT_MAPPING"."VIEW_ACTOR_seq"'),
  "ACTORNAME" VARCHAR(512),
  "DATAPORTEN_ID" varchar(50),
  PRIMARY KEY ("NY_ID")
);

CREATE SCHEMA IF NOT EXISTS "MUSARK_ACTOR";

CREATE SEQUENCE "MUSARK_ACTOR"."ORGANIZATION_seq";

CREATE TABLE "MUSARK_ACTOR"."ORGANIZATION" (
  "ID" BIGINT NOT NULL DEFAULT NEXTVAL ('"MUSARK_ACTOR"."ORGANIZATION_seq"'),
  "FN" VARCHAR(255) NOT NULL,
  "NICKNAME" VARCHAR(255),
  "TEL" VARCHAR(20),
  "WEB" VARCHAR(255),
  PRIMARY KEY ("ID")
);

CREATE SEQUENCE "MUSARK_ACTOR"."ORGANIZATION_ADDRESS_seq";

CREATE TABLE "MUSARK_ACTOR"."ORGANIZATION_ADDRESS" (
  "ID" BIGINT NOT NULL DEFAULT NEXTVAL ('"MUSARK_ACTOR"."ORGANIZATION_ADDRESS_seq"'),
  "ORGANIZATION_ID" BIGINT NOT NULL,
  "TYPE" VARCHAR(20),
  "STREET_ADDRESS" VARCHAR(20),
  "LOCALITY" VARCHAR(255),
  "POSTAL_CODE" VARCHAR(12),
  "COUNTRY_NAME" VARCHAR(255),
  "LATITUDE" DOUBLE PRECISION,
  "LONGITUDE" DOUBLE PRECISION,
  PRIMARY KEY ("ID")
);

ALTER TABLE "MUSARK_ACTOR"."ORGANIZATION_ADDRESS" ADD FOREIGN KEY ("ORGANIZATION_ID") REFERENCES "MUSARK_ACTOR"."ORGANIZATION"("ID");