######################################################################
# GitLab CI build script for the MUSIT backend project               #
######################################################################
image: $MUSIT_DOCKER_REGISTRY/musit/docker-scala-sbt

# -----
# Need to temporarily disable caches until we figure out how to properly do a
# cleanup of docker containers and images on the runner agent host machines.
# -----
# cache:
#  paths:
#    - $HOME/.sbt
#    - $HOME/.coursier

variables:
  DOCKER_DRIVER: overlay

services:
  - $MUSIT_DOCKER_REGISTRY/library/docker:dind

before_script:
  - echo "Running build $CI_JOB_ID for commit $CI_COMMIT_SHA with commit ref name $CI_COMMIT_REF_NAME"
  - mkdir $HOME/.docker
  - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
  - docker info

stages:
  - test
  - build
  - cleanup

test:
  stage: test
  variables:
    MUSIT_FUTURE_TIMEOUT: "15000"
    MUSIT_FUTURE_INTERVAL: "50"
  script:
    - echo "Building and running tests..."
    # Check if the scalafmt modified any files during the build. If yes, fail the build.
    - sbt clean scalastyle scalafmt
    - git status
    - git diff --exit-code || (echo "ERROR Scalariform check failed, see differences above."; false)
    - if [[ -n "$CODACY_PROJECT_TOKEN" ]]; then echo "Running with code coverage..."; sbt coverage test coverageReport; sbt coverageAggregate; sbt codacyCoverage; else echo "Coverage reporting disabled for forks"; sbt test; fi

build:
  stage: build
  script:
    - sbt docker:publish
  only:
    - master@MUSIT-Norway/musit

cleanup:
  stage: cleanup
  script:
    - docker rm -v $(docker ps -a -q --filter "status=exited" --filter "status=dead")
    - docker rmi $(docker images --filter "dangling=true" | grep "service_")
  only:
    - master@MUSIT-Norway/musit
  allow_failure: true
