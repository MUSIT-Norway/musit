musit {
  http {
    filters = no.uio.musit.service.MusitFilter
  }
  security {
    //module=no.uio.musit.security.dataporten.DataportenModule
    module = no.uio.musit.security.fake.FakeModule
    module = ${?MUSIT_SECURITY_MODULE}
  }
  crypto {
    secret = "changeme"
    secret = ${?APPLICATION_SECRET}
    aes {
      transformation = "AES/CTR/NoPadding"
    }
  }
  dataporten {
    authorizationURL = "https://auth.dataporten.no/oauth/authorization"
    authorizationURL = ${?URL_DATAPORTEN_AUTH}
    accessTokenURL = "https://auth.dataporten.no/oauth/token"
    accessTokenURL = ${?URL_DATAPORTEN_TOKEN}
    userApiURL = "https://auth.dataporten.no/userinfo"
    userApiURL = ${?URL_DATAPORTEN_API}
    callbackURL = ""
    callbackURL = ${?CALLBACK_URL}
    clientId = ""
    clientId = ${?DATAPORTEN_CLIENT_ID}
    clientSecret = ""
    clientSecret = ${?DATAPORTEN_CLIENT_SECRET}
    sessionTimeout = 2 hours
    sessionTimeout = ${?DATAPORTEN_SESSION_TIMEOUT}
  }
  delphi {
    callback = "http://127.0.0.1:3030"
  }
}

musit.ws.proxy {
  host = ${?PROXY_HOST}
  port = ${?PROXY_PORT}
  user = ${?PROXY_USER}
  password = ${?PROXY_PASSWORD}
}

# Play 2.6 introduces some filters _on_ by default that previously
# were not enabled. For our application to work as before, we need to disable
# these.
#
# TODO: However, we should most definately configure them to be _on_ in the future.
play.filters.disabled = [
  "play.filters.csrf.CSRFFilter",
  "play.filters.hosts.AllowedHostsFilter",
  "play.filters.headers.SecurityHeadersFilter"
]